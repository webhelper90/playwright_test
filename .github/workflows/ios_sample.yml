name: iOS Appium Test

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Node 22はwdとの互換性に問題がある場合があるため、LTSバージョンを使用

      - name: Install dependencies
        run: |
          npm install -g appium@2
          npm install @appium/doctor --location=global
          appium driver install xcuitest
          npm install webdriverio
          brew install ffmpeg
          npm install -g mjpeg-consumer
          brew tap lyft/formulae
          brew install set-simulator-location
          brew tap facebook/fb
          brew install idb-companion
          brew tap wix/brew
          brew install applesimutils
          brew install ios-deploy

      - name: Verify Appium installation
        run: appium-doctor --ios
        
      - name: Start Appium server
        run: |
          appium --log-level debug &> appium.log &
          sleep 10
          cat appium.log # ログの内容を確認

      #- name: Start Simulator
      #  run: xcrun simctl boot "iPhone 12"
      #- name: Sleep for simulator to boot
      #  run: sleep 10

        
      - name: Run Test Script
        run: |
          cat <<EOF > test.js
          const { remote } = require('webdriverio');

          async function runTest() {
            const driver = await remote({
                path: '/',
                port: 4723,
                capabilities: {
                    platformName: 'iOS',
                    browserName: 'safari',
                    "appium:options": {
                        "automationName": "XCUITest",
                        "platformVersion": "16.0",
                        "deviceName": "iPhone 12",
                        "noReset": true
                    },
                    'wdio:devtoolsOptions': { // WebdriverIO v8以上の場合に追加
                       headless: false
                    }
                }
            });

              await driver.url('https://www.google.com');
              await driver.pause(2000);

              const screenshot = await driver.takeScreenshot();
              require('fs').writeFileSync('screenshot.png', screenshot, 'base64');

              await driver.deleteSession();
          }

          runTest().catch(console.error);
          EOF
          node test.js

      - name: list
        run: xcrun simctl list

      - name: Upload Screenshot
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: screenshot.png
